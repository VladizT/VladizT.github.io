require "assets.com.func"

--local i18n = require('ysdk.i18n')

local sound_off = false;

function init(self)

	
	msg.post(".","acquire_input_focus")
	gui.set_enabled(gui.get_node("dotTarget"), false)

	--gui.set_enabled(gui.get_node("start_button"), true)
	--gui.set_enabled(gui.get_node("blackscreen"), true)

	-- Получаем лучшие очки из ладера
-- 	ysdk.leaderboards.get_player_entry("fruti",function( self, player_entry )
-- 
-- 		if player_entry then
-- 			best_scores = player_entry.score
-- 		end 
-- 
-- 	end)
	
	--localization()

	showAdv()
	
end

function localization()

	gui.set_text(gui.get_node("restart_button_text"), i18n.key("button_restart"))
	gui.set_text(gui.get_node("total_scores_label"), i18n.key("scores"))
	gui.set_text(gui.get_node("best_scores_label"), i18n.key("best_scores"))
	gui.set_text(gui.get_node("pause_text"), i18n.key("pause"))
	
end


function showAdv()

-- 	ysdk.adv.show_fullscreen_adv({
-- 
-- 		on_open  = function (self, was_open)
-- 
-- 			if not pause then
-- 				pause_switch()
-- 			end
-- 
-- 			sound.set_group_gain("master", 0)
-- 			
-- 		end,
-- 
-- 		on_close = function (self, was_shown)
-- 
-- 			if pause then
-- 				pause_switch()
-- 			end
-- 			
-- 			if not sound_off then
-- 				
-- 				sound.set_group_gain("master", 1)
-- 				
-- 			end
-- 
-- 		end,
-- 		on_error = function (self, error)
-- 			-- some action after error
-- 		end
-- 	})
	
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)


	if message_id == hash("updateScores") then

		gui.set_text(gui.get_node("scoresText"), scores)
	
	end

	if message_id == hash("resetScores") then

		scores = 0
		gui.set_text(gui.get_node("scoresText"), scores)

	end

	if message_id == hash("dotPosition") then

		gui.set_position(gui.get_node("dotTarget"), vmath.vector3(message.x, message.y, 1))

	end

	if message_id == hash("dotEnabled") then

		gui.set_enabled(gui.get_node("dotTarget"), message.enabled)

	end

	if message_id == hash("game_over") then

		endGame()

	end

end




function on_input(self, action_id, action)

	if action_id == hash("touch") and action.pressed then

		
		local start_button = gui.get_node("start_button")
		local restart_button = gui.get_node("restart_button")

		local start_button_hitbox = gui.get_node("start_button_hitbox")
		local restart_button_hitbox = gui.get_node("restart_button_hitbox")

		local gameover_screen = gui.get_node("gameover_screen")
		
		local sound_button = gui.get_node("sound_button")
		local pause_button = gui.get_node("pause_button")
		
	
		if click(start_button,  action.x,  action.y, start_button_hitbox) then 

			startGame() 
			
		end

		
		if click(gameover_screen,  action.x,  action.y, restart_button_hitbox) then 

			-- Показыаем рекламу при рестарте
			--showAdv()

			restartGame() 
			
		end

		if click(sound_button,  action.x,  action.y) then 

			changeSound() 

		end

		if not pre_start and click(pause_button,  action.x,  action.y) then 

			pause_switch() 

		end
		
	end

	
end


function startGame() 

	gui.set_enabled(gui.get_node("start_button"), false)
	gui.set_enabled(gui.get_node("blackscreen"), false)

	msg.post("/factoryBalls#factoryBalls", "start")
	
end

function restartGame() 
	
	--gui.set_enabled(gui.get_node("restart_button"), false)
	gui.set_enabled(gui.get_node("gameover_screen"), false)
	
	gui.set_enabled(gui.get_node("blackscreen"), false)

	msg.post("/factoryBalls#factoryBalls", "restart")

end


function endGame() 

	
	gui.set_enabled(gui.get_node("blackscreen"), true)

	--gui.set_enabled(gui.get_node("restart_button"), true)
	gui.set_enabled(gui.get_node("gameover_screen"), true)

	if best_scores < scores then

		best_scores = scores

		-- записываем в ладдер очки, если счет был лучшим
		--ysdk.leaderboards.set_score("fruti",best_scores )
		
	end

	
	gui.set_text(gui.get_node("total_scores"), scores)
	gui.set_text(gui.get_node("best_scores"), best_scores)

	
	pre_start = true

	msg.post("/gameover_line#gameover_line", "reset")

	msg.post("/factoryBalls#factoryBalls", "reset")
	
	msg.post(".","acquire_input_focus")

end



function changeSound()

	local sound_button = gui.get_node("sound_button")
	
	if sound.get_group_gain("master") == 1 then

		sound.set_group_gain("master", 0)
		gui.play_flipbook(sound_button, "sound_off")

		sound_off = true
		
	else

		sound.set_group_gain("master", 1)
		gui.play_flipbook(sound_button, "sound")

		sound_off = false
		
	end
	

end

function pause_switch()

	if pause then

		pause = false
		gui.set_enabled(gui.get_node("blackscreen"), false)
		gui.set_enabled(gui.get_node("pause_text"), false)

		msg.post("main:/loader#collectionproxy", "set_time_step", {factor = 1, mode = 1})
		
	else

		pause = true
		gui.set_enabled(gui.get_node("blackscreen"), true)
		gui.set_enabled(gui.get_node("pause_text"), true)

		msg.post("/factoryBalls#factoryBalls", "saveData")

		msg.post("main:/loader#collectionproxy", "set_time_step", {factor = 0, mode = 0})

	end
	

end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
