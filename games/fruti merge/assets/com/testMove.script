go.property("active", false)
go.property("startPos", vmath.vector3())
go.property("t", 0)

function init(self)


	self.startPos = go.get_position()

	self.t = 0
	
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)

	self.t = self.t + 1*dt
	
	if self.active then

		
		local targetPos = go.get_position("testBall")
		
		local pos = vmath.lerp(self.t, self.startPos, targetPos)

		go.set_position(pos)

		if( vmath.length(targetPos - go.get_position()) < 5 ) then

			self.active = false
			go.set_position(targetPos)
			go.delete("testBall")
	
		end
		
	end
	
	
end



function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
